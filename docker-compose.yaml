version: "3.8"

volumes:
  db-data:
  redis_data:

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: ./docker/app.dockerfile
    env_file:
      ./src/.env
    volumes:
      - ./src/:/var/www/
    restart: unless-stopped

  web:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/web.dockerfile
    restart: always
    volumes:
      - ./src:/var/www
    tty: true
    ports:
      - "80:80"
    depends_on:
      - app

  app-queue:
    container_name: app-queue
    build:
      context: .
      dockerfile: ./docker/app.dockerfile
    env_file:
      ./src/.env
    volumes:
      - ./src/:/var/www/
    command: php artisan queue:work redis --queue=app_01_alta --memory=1024 --max-jobs=1000
    restart: unless-stopped
    depends_on:
      - web

  localstack:
    container_name: aws
    image: localstack/localstack
#    ports:
#      - '4566-4597:4566-4597'
    environment:
      - SERVICES=s3
      - AWS_ACCESS_KEY_ID=access_key
      - AWS_SECRET_ACCESS_KEY=secret_access_key
    volumes:
      - ./localstack/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh
      - /var/run/docker.sock:/var/run/docker.sock
  redis:
    image: redis:latest
    container_name: redis
#    ports:
#      - "6379:6379"
    volumes:
      - redis_data:/data
  db:
    image: mysql:5.7
    restart: always
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci --bind-address=0.0.0.0
    environment:
      - MYSQL_USER=user
      - MYSQL_PASSWORD=80777D21SDR1567BA
      - MYSQL_ROOT_PASSWORD=808S280777D21SDR1567BA
      - MYSQL_DATABASE=app
      - MYSQL_ROOT_HOST=%
#    ports:
#      - '3307:3306'
    volumes:
      - db-data:/var/lib/mysql
